*trouble.txt*           For NVIM v0.5.0          Last change: 2022 November 16

==============================================================================
Table of Contents                                  *trouble-table-of-contents*

1. üö¶ Trouble                                         |trouble-üö¶-trouble|
  - ‚ú® Features                                        |trouble-‚ú®-features|
  - ‚ö°Ô∏è Requirements                          |trouble-‚ö°Ô∏è-requirements|
  - üì¶ Installation                              |trouble-üì¶-installation|
  - ‚öôÔ∏è Configuration                        |trouble-‚öôÔ∏è-configuration|
  - üöÄ Usage                                            |trouble-üöÄ-usage|
  - üé® Colors                                          |trouble-üé®-colors|

==============================================================================
1. üö¶ Trouble                                         *trouble-üö¶-trouble*

A pretty list for showing diagnostics, references, telescope results, quickfix
and location lists to help you solve all the trouble your code is causing.

<div class="figure">
<img src="./media/shot.png" title="fig:"/>
<p class="caption">LSP Trouble Screenshot</p>
</div>

‚ú® FEATURES                                            *trouble-‚ú®-features*


- pretty list of:
    - Diagnostics
    - LSP references
    - LSP implementations
    - LSP definitions
    - LSP type definitions
    - quickfix list
    - location list
    - Telescope <https://github.com/nvim-telescope/telescope.nvim> search results
- automatically updates on new diagnostics
- toggle **diagnostics** mode between **workspace** or **document**
- **interactive preview** in your last accessed window
- _cancel_ preview or _jump_ to the location
- configurable actions, signs, highlights,‚Ä¶


‚ö°Ô∏è REQUIREMENTS                              *trouble-‚ö°Ô∏è-requirements*


- Neovim >= 0.5.0
- Properly configured Neovim LSP client
- nvim-web-devicons <https://github.com/kyazdani42/nvim-web-devicons> is optional to enable file icons
- a theme with properly configured highlight groups for Neovim Diagnostics
- or install üåà lsp-colors <https://github.com/folke/lsp-colors.nvim> to automatically create the missing highlight groups
- a patched font <https://www.nerdfonts.com/> for the default severity and fold icons


üì¶ INSTALLATION                                  *trouble-üì¶-installation*

Install the plugin with your preferred package manager:

VIM-PLUG <HTTPS://GITHUB.COM/JUNEGUNN/VIM-PLUG> ~

>
    " Vim Script
    Plug 'kyazdani42/nvim-web-devicons'
    Plug 'folke/trouble.nvim'
    
    lua << EOF
      require("trouble").setup {
        -- your configuration comes here
        -- or leave it empty to use the default settings
        -- refer to the configuration section below
      }
    EOF
<


PACKER <HTTPS://GITHUB.COM/WBTHOMASON/PACKER.NVIM> ~

>
    -- Lua
    use {
      "folke/trouble.nvim",
      requires = "kyazdani42/nvim-web-devicons",
      config = function()
        require("trouble").setup {
          -- your configuration comes here
          -- or leave it empty to use the default settings
          -- refer to the configuration section below
        }
      end
    }
<


‚öôÔ∏è CONFIGURATION                            *trouble-‚öôÔ∏è-configuration*

SETUP ~

Trouble comes with the following defaults:

>
    {
        position = "bottom", -- position of the list can be: bottom, top, left, right
        height = 10, -- height of the trouble list when position is top or bottom
        width = 50, -- width of the list when position is left or right
        icons = true, -- use devicons for filenames
        mode = "workspace_diagnostics", -- "workspace_diagnostics", "document_diagnostics", "quickfix", "lsp_references", "loclist"
        fold_open = "Ôëº", -- icon used for open folds
        fold_closed = "Ôë†", -- icon used for closed folds
        group = true, -- group results by file
        padding = true, -- add an extra new line on top of the list
        action_keys = { -- key mappings for actions in the trouble list
            -- map to {} to remove a mapping, for example:
            -- close = {},
            close = "q", -- close the list
            cancel = "<esc>", -- cancel the preview and get back to your last window / buffer / cursor
            refresh = "r", -- manually refresh
            jump = {"<cr>", "<tab>"}, -- jump to the diagnostic or open / close folds
            open_split = { "<c-x>" }, -- open buffer in new split
            open_vsplit = { "<c-v>" }, -- open buffer in new vsplit
            open_tab = { "<c-t>" }, -- open buffer in new tab
            jump_close = {"o"}, -- jump to the diagnostic and close the list
            toggle_mode = "m", -- toggle between "workspace" and "document" diagnostics mode
            toggle_preview = "P", -- toggle auto_preview
            hover = "K", -- opens a small popup with the full multiline message
            preview = "p", -- preview the diagnostic location
            close_folds = {"zM", "zm"}, -- close all folds
            open_folds = {"zR", "zr"}, -- open all folds
            toggle_fold = {"zA", "za"}, -- toggle fold of current file
            previous = "k", -- previous item
            next = "j" -- next item
        },
        indent_lines = true, -- add an indent guide below the fold icons
        auto_open = false, -- automatically open the list when you have diagnostics
        auto_close = false, -- automatically close the list when you have no diagnostics
        auto_preview = true, -- automatically preview the location of the diagnostic. <esc> to close preview and go back to last window
        auto_fold = false, -- automatically fold a file trouble list at creation
        auto_jump = {"lsp_definitions"}, -- for the given modes, automatically jump if there is only a single result
        signs = {
            -- icons / text used for a diagnostic
            error = "Ôôô",
            warning = "Ôî©",
            hint = "Ô†µ",
            information = "Ôëâ",
            other = "Ô´†"
        },
        use_diagnostic_signs = false -- enabling this will use the signs defined in your lsp client
    }
<



  üí° if you don‚Äôt want to use icons or a patched font, you can use the
  settings below


>
    -- settings without a patched font or icons
    {
        icons = false,
        fold_open = "v", -- icon used for open folds
        fold_closed = ">", -- icon used for closed folds
        indent_lines = false, -- add an indent guide below the fold icons
        signs = {
            -- icons / text used for a diagnostic
            error = "error",
            warning = "warn",
            hint = "hint",
            information = "info"
        },
        use_diagnostic_signs = false -- enabling this will use the signs defined in your lsp client
    }
<


üöÄ USAGE                                                *trouble-üöÄ-usage*

COMMANDS ~

Trouble comes with the following commands:


- `Trouble [mode]`: open the list
- `TroubleClose [mode]`: close the list
- `TroubleToggle [mode]`: toggle the list
- `TroubleRefresh`: manually refresh the active list


Modes:


- **document_diagnostics:** document diagnostics from the builtin LSP client
- **workspace_diagnostics:** workspace diagnostics from the builtin LSP client
- **lsp_references:** references of the word under the cursor from the builtin
    LSP client
- **lsp_definitions:** definitions of the word under the cursor from the builtin
    LSP client
- **lsp_type_definitions:** type definitions of the word under the cursor from
    the builtin LSP client
- **quickfix:** |quickfix| items
- **loclist:** items from the window‚Äôs |location list|


Example keybindings:

>
    " Vim Script
    nnoremap <leader>xx <cmd>TroubleToggle<cr>
    nnoremap <leader>xw <cmd>TroubleToggle workspace_diagnostics<cr>
    nnoremap <leader>xd <cmd>TroubleToggle document_diagnostics<cr>
    nnoremap <leader>xq <cmd>TroubleToggle quickfix<cr>
    nnoremap <leader>xl <cmd>TroubleToggle loclist<cr>
    nnoremap gR <cmd>TroubleToggle lsp_references<cr>
<


>
    -- Lua
    vim.keymap.set("n", "<leader>xx", "<cmd>TroubleToggle<cr>",
      {silent = true, noremap = true}
    )
    vim.keymap.set("n", "<leader>xw", "<cmd>TroubleToggle workspace_diagnostics<cr>",
      {silent = true, noremap = true}
    )
    vim.keymap.set("n", "<leader>xd", "<cmd>TroubleToggle document_diagnostics<cr>",
      {silent = true, noremap = true}
    )
    vim.keymap.set("n", "<leader>xl", "<cmd>TroubleToggle loclist<cr>",
      {silent = true, noremap = true}
    )
    vim.keymap.set("n", "<leader>xq", "<cmd>TroubleToggle quickfix<cr>",
      {silent = true, noremap = true}
    )
    vim.keymap.set("n", "gR", "<cmd>TroubleToggle lsp_references<cr>",
      {silent = true, noremap = true}
    )
<


API ~

You can use the following functions in your keybindings:

>
    -- jump to the next item, skipping the groups
    require("trouble").next({skip_groups = true, jump = true});
    
    -- jump to the previous item, skipping the groups
    require("trouble").previous({skip_groups = true, jump = true});
    
    -- jump to the first item, skipping the groups
    require("trouble").first({skip_groups = true, jump = true});
    
    -- jump to the last item, skipping the groups
    require("trouble").last({skip_groups = true, jump = true});
<


TELESCOPE ~

You can easily open any search results in **Trouble**, by defining a custom
action:

>
    local actions = require("telescope.actions")
    local trouble = require("trouble.providers.telescope")
    
    local telescope = require("telescope")
    
    telescope.setup {
      defaults = {
        mappings = {
          i = { ["<c-t>"] = trouble.open_with_trouble },
          n = { ["<c-t>"] = trouble.open_with_trouble },
        },
      },
    }
<


When you open telescope, you can now hit `<c-t>` to open the results in
**Trouble**

üé® COLORS                                              *trouble-üé®-colors*

The table below shows all the highlight groups defined for Trouble.

‚îÇ    Highlight Group     ‚îÇ
‚îÇ_TroubleCount_          ‚îÇ
‚îÇ_TroubleError_          ‚îÇ
‚îÇ_TroubleNormal_         ‚îÇ
‚îÇ_TroubleTextInformation_‚îÇ
‚îÇ_TroubleSignWarning_    ‚îÇ
‚îÇ_TroubleLocation_       ‚îÇ
‚îÇ_TroubleWarning_        ‚îÇ
‚îÇ_TroublePreview_        ‚îÇ
‚îÇ_TroubleTextError_      ‚îÇ
‚îÇ_TroubleSignInformation_‚îÇ
‚îÇ_TroubleIndent_         ‚îÇ
‚îÇ_TroubleSource_         ‚îÇ
‚îÇ_TroubleSignHint_       ‚îÇ
‚îÇ_TroubleSignOther_      ‚îÇ
‚îÇ_TroubleFoldIcon_       ‚îÇ
‚îÇ_TroubleTextWarning_    ‚îÇ
‚îÇ_TroubleCode_           ‚îÇ
‚îÇ_TroubleInformation_    ‚îÇ
‚îÇ_TroubleSignError_      ‚îÇ
‚îÇ_TroubleFile_           ‚îÇ
‚îÇ_TroubleHint_           ‚îÇ
‚îÇ_TroubleTextHint_       ‚îÇ
‚îÇ_TroubleText_           ‚îÇ


Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
